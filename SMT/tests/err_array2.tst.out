success
(declare-fun a () Array)
                  ^^^^^
(error "The sort symbol Array expects 2 arguments, not 0")
(declare-fun a () (Array Bool))
                  ^^^^^^^^^^^^
(error "The sort symbol Array expects 2 arguments, not 1")
(declare-fun a () (Array Bool Bool Bool))
                  ^^^^^^^^^^^^^^^^^^^^^^
(error "The sort symbol Array expects 2 arguments, not 3")
success
success
success
success
success
(assert (= i (select i i)))
             ^^^^^^^^^^^^
(error "The first argument of the select function should be an Array sort, not I")
(assert (= i (select a a)))
             ^^^^^^^^^^^^
(error "The second argument of the select function must match the array index sort: (Array I V) vs. I")
(assert (= i (select a)))
              ^^^^^^
(error " The select function should have two arguments")
(assert (= i (select a i i)))
              ^^^^^^
(error " The select function should have two arguments")
(assert (= i (select a i)))
        ^^^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: I vs. V")
(assert (= i (store a i v)))
        ^^^^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: I vs. (Array I V)")
(assert (= i (store i v v)))
             ^^^^^^^^^^^^^
(error "The first argument of the store function should be an Array sort, not I")
(assert (= i (store a i v v)))
              ^^^^^
(error " The store function should have three arguments")
(assert (= i (store a v v)))
             ^^^^^^^^^^^^^
(error "The second argument of the store function must match the array index sort: V vs. I")
(assert (= i (store a i i)))
             ^^^^^^^^^^^^^
(error "The third argument of the store function must match the array value sort: I vs. V")
success
success
(assert (= v (select aa i)))
             ^^^^^^^^^^^^^
(error "The first argument of the select function should be an Array sort, not (A I V)")
(assert (= aa (store aa i v)))
              ^^^^^^^^^^^^^^
(error "The first argument of the store function should be an Array sort, not (A I V)")
