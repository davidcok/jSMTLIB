(set-logic QF_BV)
           ^^^^^
(error "The simplify solver does not yet support the bit-vector theory")
success
success
success
(assert (= (bvnot x) #b1011))
        ^^^^^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: (_ BitVec 3) vs. (_ BitVec 4)")
(assert (= (bvnot true) #b1011))
                  ^^^^
(error "The argument must have a BitVec sort, not Bool")
(assert (= (bvnot x y) #b1011))
            ^^^^^
(error " The bvnot function should have one argument")
(assert (= (bvneg x) #b0111))
        ^^^^^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: (_ BitVec 3) vs. (_ BitVec 4)")
(assert (= (bvneg x y) #b0111))
            ^^^^^
(error " The bvneg function should have one argument")
(assert (= (bvand true y) #b111))
                  ^^^^
(error "The argument must have a BitVec sort, not Bool")
(assert (= (bvand x false) #b111))
                    ^^^^^
(error "The argument must have a BitVec sort, not Bool")
(assert (= (bvand x y) #b111))
           ^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvand x y z) #b111))
            ^^^^^
(error " The bvand function should have two arguments")
(assert (= (bvor x y) #b111))
           ^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvadd x y) #b111))
           ^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvmul x y) #b111))
           ^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvshl x y) #b111))
           ^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvlshr x y) #b111))
           ^^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvudiv x y) #b111))
           ^^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (= (bvurem x y) #b111))
           ^^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (bvult x y))
        ^^^^^^^^^^^
(error "The sorts must match: (_ BitVec 3) vs. (_ BitVec 5)")
(assert (bvult y))
         ^^^^^
(error " The bvult function should have two arguments")
(assert (bvult true y))
               ^^^^
(error "The argument must have a BitVec sort, not Bool")
(assert (bvult x false))
                 ^^^^^
(error "The argument must have a BitVec sort, not Bool")
(assert (= (concat x y) #xa))
        ^^^^^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: (_ BitVec 8) vs. (_ BitVec 4)")
(assert (= (concat y) #xaa))
            ^^^^^^
(error " The concat function should have two arguments")
(assert (= (concat x true) z))
                     ^^^^
(error "The argument must have a BitVec sort, not Bool")
(assert (= ((_ extract 40 2) z) x))
                          ^
(error "The end index must be less than the length of the argument sort: 40 vs. 8")
(assert (= ((_ extract 1 2) z) x))
                         ^
(error "The end index is less than the starting index")
(assert (= ((_ extract a 1) z) x))
                       ^
(error "Expected a numeral here, instead of a symbol")
(assert (= ((_ extract ) z) x))
                       ^
(error "Expected a numeral here, instead of a )")
(assert (= ((_ extract 1 2 3 ) z) x))
            ^^^^^^^^^^^^^^^^^^
(error "Expected exactly two numerals in an extract identifier")
(assert (= #b101 #b1010))
        ^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: (_ BitVec 3) vs. (_ BitVec 4)")
(assert (distinct #b1 #b10))
        ^^^^^^^^^^^^^^^^^^^
(error "Mismatched sorts of arguments: (_ BitVec 1) vs. (_ BitVec 2)")
(assert (ite true #b0 #b11))
        ^^^^^^^^^^^^^^^^^^^
(error "The last two arguments of ite have different sorts")
