success
success
success
(assert (forall ((r Bool)) (! r :named R))) ; error
                              ^
(error "The expression being named is not closed - this symbol is a variable: r")
(assert (exists ((r Bool)) (! r :named R))) ; error
                              ^
(error "The expression being named is not closed - this symbol is a variable: r")
success
(assert (let ((r true)) (! r :named R))) ; error - R already defined
                                    ^
(error "Symbol R is already defined")
(assert (let ((r true)) (! r :named R2))) ; OK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(error "Yices assert command failed: Failed to define attributed expression: (error \"Error: [<string>, line(1), column(18), position(17)]: Undefined name \\\"r\\\".
\")")
(assert (forall ((r Bool)) (let ((r true)) (! r :named RR)))) ; OK
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(error "Yices assert command failed: Failed to define attributed expression: (error \"Error: [<string>, line(1), column(18), position(17)]: Undefined name \\\"r\\\".
\")")
(assert (forall ((q Bool)) (let ((r q)) (! r :named RRR)))) ; error - FIXME
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(error "Yices assert command failed: Failed to define attributed expression: (error \"Error: [<string>, line(1), column(19), position(18)]: Undefined name \\\"r\\\".
\")")
